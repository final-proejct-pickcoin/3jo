##### 배포할 때는 fastapi, react, spring 모두 volumes 제거 / react에서 NODE_ENV=production으로 변경
services:
  fastapi-app:
    build: ./fastapi-app
    volumes:
      - ./fastapi-app:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    # 환경변수에 DB 접속 정보 지정(아래 예시 참고)
    environment:
      - MYSQL_HOST=34.64.105.135
      - MYSQL_USER=pickcoin
      - MYSQL_PASSWORD=Admin1234!
      - MYSQL_DATABASE=coindb
      - REDIS_HOST=redis
    depends_on:
      - redis
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
  spring-app:
    build:
      #이미지빌드 할 폴더위치 설정
      context: ./spring-app
      #도커파일 설정
      dockerfile: Dockerfile.dev
    volumes:
      - ./spring-app:/home/gradle/app
    container_name: spring-app
    ports:
      - "8080:8080"
    environment:
      #Docker에게 volume으로 연결된 폴더의 변경 사항을 적극적으로 감시명령 (dev-tools의존성)
      - SPRING_DEVTOOLS_WATCH_ADDITIONAL_PATHS=/home/gradle/app
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_MAIL_HOST=smtp.gmail.com
      - SPRING_MAIL_PORT=587
      - SPRING_MAIL_USERNAME=jeesoo1899@gmail.com
      - SPRING_MAIL_PASSWORD=yqpmfomkytgtokpm
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=true
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=true
      - MYSQL_HOST=34.64.105.135
      - MYSQL_USER=pickcoin
      - MYSQL_PASSWORD=Admin1234!
      - MYSQL_DATABASE=coindb
      # 아래 base_url은 배포시 수정
      - APP_BASE_URL=http://localhost:8080
    depends_on:
      - redis
    command: ./gradlew bootRun
  react-app:

    build: ./react-app
    volumes:
      - ./react-app:/app
      - /app/node_modules
    container_name: react-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
    depends_on:
      - fastapi-app
      - spring-app
    command: ["pnpm", "dev"]



  # elastic:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.txt
  #   ports:
  #     - 9200:9200
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - xpack.security.http.ssl.enabled=false
  #     - xpack.security.enrollment.enabled=true

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:7.10.2
  #   ports:
  #     - 5044:5044
  #   environment:
  #     - ELASTICSERACH_HOSTS=http://elastic:9200
      # volumes:
      # - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      # depends_on:
      # - elasticsearch
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.17.4
  #   ports:
  #     - 5601:5601
  #   environment:
  #     - ELASTICSERACH_HOSTS=http://elastic:9200
  
